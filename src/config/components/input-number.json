{
  "__id__": "input-number",
  "name": "InputNumber",
  "tag": "p-input-number",
  "tagIcon": "inputNumber",
  "layouts": [
    "rawItem"
  ],
  "document": "https://primevue.org/inputnumber/",
  "description": "InputNumber is an input component to provide numerical input.",
  "attributes": {
    "vModel": "modelValue",
    "format": {
      "label": "format",
      "title": "Whether to format the value.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "show-buttons": {
      "label": "showButtons",
      "title": "Displays spinner buttons.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "button-layout": {
      "label": "buttonLayout",
      "title": "Layout of the buttons.",
      "types": [
        {
          "name": "string",
          "tag": "p-dropdown",
          "props": {
            "options": [
              "horizontal",
              "vertical",
              "stacked"
            ]
          }
        }
      ],
      "default": "stacked"
    },
    "increment-button-class": {
      "label": "incrementButtonClass",
      "title": "Style class of the increment button.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "decrement-button-class": {
      "label": "decrementButtonClass",
      "title": "Style class of the decrement button.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "increment-button-icon": {
      "label": "incrementButtonIcon",
      "title": "Style class of the increment button.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "decrement-button-icon": {
      "label": "decrementButtonIcon",
      "title": "Style class of the decrement button.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "locale": {
      "label": "locale",
      "title": "Locale to be used in formatting.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "locale-matcher": {
      "label": "localeMatcher",
      "title": "The locale matching algorithm to use. Possible values are 'lookup' and 'best fit'; the default is 'best fit'.\r\nSee [Locale Negotation](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl#locale_negotiation) for details.",
      "types": [
        {
          "name": "string",
          "tag": "p-dropdown",
          "props": {
            "options": [
              "lookup"
            ]
          }
        }
      ],
      "default": "best fit"
    },
    "mode": {
      "label": "mode",
      "title": "Defines the behavior of the component.",
      "types": [
        {
          "name": "string",
          "tag": "p-dropdown",
          "props": {
            "options": [
              "decimal",
              "currency"
            ]
          }
        }
      ],
      "default": "decimal"
    },
    "prefix": {
      "label": "prefix",
      "title": "Text to display before the value.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "suffix": {
      "label": "suffix",
      "title": "Text to display after the value.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "currency": {
      "label": "currency",
      "title": "The currency to use in currency formatting. Possible values are the [ISO 4217 currency codes](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency), such as 'USD' for the US dollar, 'EUR' for the euro, or 'CNY' for the Chinese RMB.\r\nThere is no default value; if the style is 'currency', the currency property must be provided.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "currency-display": {
      "label": "currencyDisplay",
      "title": "How to display the currency in currency formatting. Possible values are 'symbol' to use a localized currency symbol such as â‚¬, 'code' to use the ISO currency code, 'name' to use a localized currency name such as 'dollar'.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "symbol"
    },
    "use-grouping": {
      "label": "useGrouping",
      "title": "Whether to use grouping separators, such as thousands separators or thousand/lakh/crore separators.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "min-fraction-digits": {
      "label": "minFractionDigits",
      "title": "The minimum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number and percent formatting is 0;\r\nthe default for currency formatting is the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information).",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "max-fraction-digits": {
      "label": "maxFractionDigits",
      "title": "The maximum number of fraction digits to use. Possible values are from 0 to 20; the default for plain number formatting is the larger of minimumFractionDigits and 3;\r\nthe default for currency formatting is the larger of minimumFractionDigits and the number of minor unit digits provided by the [ISO 4217 currency code](https://www.six-group.com/en/products-services/financial-information/data-standards.html#scrollTo=maintenance-agency) list (2 if the list doesn't provide that information).",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "rounding-mode": {
      "label": "roundingMode",
      "title": "How decimals should be rounded.\r\nThe default value is  `\"halfExpand\"` , [further information](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/NumberFormat/NumberFormat#roundingmode).",
      "types": [
        {
          "name": "RoundingMode",
          "tag": "p-input-text"
        }
      ]
    },
    "min": {
      "label": "min",
      "title": "Mininum boundary value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "max": {
      "label": "max",
      "title": "Maximum boundary value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "step": {
      "label": "step",
      "title": "Step factor to increment/decrement the value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 1
    },
    "allow-empty": {
      "label": "allowEmpty",
      "title": "Determines whether the input field is empty.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "highlight-on-focus": {
      "label": "highlightOnFocus",
      "title": "Highlights automatically the input value.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "invalid": {
      "label": "invalid",
      "title": "When present, it specifies that the component should have invalid state style.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "disabled": {
      "label": "disabled",
      "title": "When present, it specifies that the component should be disabled.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "variant": {
      "label": "variant",
      "title": "Specifies the input variant of the component.",
      "types": [
        {
          "name": "string",
          "tag": "p-dropdown",
          "props": {
            "options": [
              "filled",
              "outlined"
            ]
          }
        }
      ],
      "default": "outlined"
    },
    "readonly": {
      "label": "readonly",
      "title": "When present, it specifies that an input field is read-only.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "placeholder": "Please enter ",
    "input-id": {
      "label": "inputId",
      "title": "Identifier of the focus input to match a label defined for the chips.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "input-class": {
      "label": "inputClass",
      "title": "Style class of the input field.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "object-editor"
        }
      ]
    },
    "input-style": {
      "label": "inputStyle",
      "title": "Inline style of the input field.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "input-props": {
      "label": "inputProps",
      "title": "Used to pass all properties of the HTMLInputElement to the focusable input element inside the component.",
      "types": [
        {
          "name": "InputHTMLAttributes",
          "tag": "p-input-text"
        }
      ]
    },
    "increment-button-props": {
      "label": "incrementButtonProps",
      "title": "Used to pass all properties of the HTMLButtonElement to increment button inside the component.",
      "types": [
        {
          "name": "ButtonHTMLAttributes",
          "tag": "p-input-text"
        }
      ]
    },
    "decrement-button-props": {
      "label": "decrementButtonProps",
      "title": "Used to pass all properties of the HTMLButtonElement to decrement button inside the component.",
      "types": [
        {
          "name": "ButtonHTMLAttributes",
          "tag": "p-input-text"
        }
      ]
    },
    "aria-labelledby": {
      "label": "ariaLabelledby",
      "title": "Establishes relationships between the component and label(s) where its value should be one or more element IDs.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "aria-label": {
      "label": "ariaLabel",
      "title": "Establishes a string value that labels the component.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "pt": {
      "label": "pt",
      "title": "Used to pass attributes to DOM elements inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "pt-options": {
      "label": "ptOptions",
      "title": "Used to configure passthrough(pt) options of the component.",
      "types": [
        {
          "name": "PassThroughOptions",
          "tag": "p-input-text"
        }
      ]
    },
    "unstyled": {
      "label": "unstyled",
      "title": "When enabled, it removes component related styles in the core.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    }
  },
  "slots": [
    {
      "name": "incrementbuttonicon",
      "title": "Custom increment button icon template."
    },
    {
      "name": "decrementbuttonicon",
      "title": "Custom decrement button icon template."
    }
  ]
}
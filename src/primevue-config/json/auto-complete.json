{
  "__id__": "auto-complete",
  "name": "AutoComplete",
  "tag": "p-auto-complete",
  "tagIcon": "autoComplete",
  "layouts": [
    "rawItem"
  ],
  "document": "https://primevue.org/autocomplete",
  "description": "AutoComplete is an input component that provides real-time suggestions when being typed.",
  "attributes": {
    "vModel": "modelValue",
    "suggestions": {
      "label": "suggestions",
      "title": "An array of suggestions to display.",
      "types": [
        {
          "name": "array",
          "tag": "array-editor"
        }
      ],
      "default": []
    },
    "field": {
      "label": "field",
      "title": "Property name or getter function of a suggested object to resolve and display.",
      "types": [
        {
          "name": "any",
          "tag": "p-input-text"
        }
      ]
    },
    "option-label": {
      "label": "optionLabel",
      "title": "Property name or getter function to use as the label of an option.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "function",
          "tag": "p-input-text"
        }
      ]
    },
    "option-disabled": {
      "label": "optionDisabled",
      "title": "Property name or getter function to use as the disabled flag of an option, defaults to false when not defined.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ]
    },
    "option-group-label": {
      "label": "optionGroupLabel",
      "title": "Property name or getter function to use as the label of an option group.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "option-group-children": {
      "label": "optionGroupChildren",
      "title": "Property name or getter function that refers to the children options of option group.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "scroll-height": {
      "label": "scrollHeight",
      "title": "Maximum height of the suggestions panel.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "200px"
    },
    "dropdown": {
      "label": "dropdown",
      "title": "Displays a button next to the input field when enabled.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "dropdown-mode": {
      "label": "dropdownMode",
      "title": "Specifies the behavior dropdown button. Default \"blank\" mode sends an empty string and \"current\" mode sends the input value.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "blank"
    },
    "auto-highlight": {
      "label": "autoHighlight",
      "title": "Highlights automatically the first item of the dropdown to be selected.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "multiple": {
      "label": "multiple",
      "title": "Specifies if multiple values can be selected.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "placeholder": "Please enter ",
    "loading": {
      "label": "loading",
      "title": "Whether the multiselect is in loading state.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "disabled": {
      "label": "disabled",
      "title": "When present, it specifies that the component should be disabled.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "data-key": {
      "label": "dataKey",
      "title": "A property to uniquely identify an option.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "min-length": {
      "label": "minLength",
      "title": "Minimum number of characters to initiate a search.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 1
    },
    "delay": {
      "label": "delay",
      "title": "Delay between keystrokes to wait before sending a query.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 300
    },
    "append-to": {
      "label": "appendTo",
      "title": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body and \"self\" for the element itself.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "body"
    },
    "force-selection": {
      "label": "forceSelection",
      "title": "When present, autocomplete clears the manual input if it does not match of the suggestions to force only accepting values from the suggestions.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "complete-on-focus": {
      "label": "completeOnFocus",
      "title": "Whether to run a query when input receives focus.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "input-id": {
      "label": "inputId",
      "title": "Identifier of the underlying input element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "input-style": {
      "label": "inputStyle",
      "title": "Inline style of the input field.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "input-class": {
      "label": "inputClass",
      "title": "Style class of the input field.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "p-input-text"
        }
      ]
    },
    "input-props": {
      "label": "inputProps",
      "title": "Used to pass all properties of the HTMLInputElement/HTMLSpanElement to the focusable input element inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "panel-style": {
      "label": "panelStyle",
      "title": "Inline style of the overlay panel.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "panel-class": {
      "label": "panelClass",
      "title": "Style class of the overlay panel.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "p-input-text"
        }
      ]
    },
    "panel-props": {
      "label": "panelProps",
      "title": "Used to pass all properties of the HTMLDivElement to the overlay panel inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "dropdown-icon": {
      "label": "dropdownIcon",
      "title": "Icon to display in the dropdown.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "dropdown-class": {
      "label": "dropdownClass",
      "title": "Style class of the dropdown button.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "loading-icon": {
      "label": "loadingIcon",
      "title": "Icon to display in loading state.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "remove-token-icon": {
      "label": "removeTokenIcon",
      "title": "Icon to display in chip remove action.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "virtual-scroller-options": {
      "label": "virtualScrollerOptions",
      "title": "Whether to use the virtualScroller feature. The properties of VirtualScroller component can be used like an object in it.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "auto-option-focus": {
      "label": "autoOptionFocus",
      "title": "Whether to focus on the first visible or selected element when the overlay panel is shown.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "select-on-focus": {
      "label": "selectOnFocus",
      "title": "When enabled, the focused option is selected.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "search-locale": {
      "label": "searchLocale",
      "title": "Locale to use in searching. The default locale is the host environment's current locale.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "search-message": {
      "label": "searchMessage",
      "title": "Text to be displayed in hidden accessible field when filtering returns any results. Defaults to value from PrimeVue locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "{0} results are available"
    },
    "selection-message": {
      "label": "selectionMessage",
      "title": "Text to be displayed in hidden accessible field when options are selected. Defaults to value from PrimeVue locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "{0} items selected"
    },
    "empty-selection-message": {
      "label": "emptySelectionMessage",
      "title": "Text to be displayed in hidden accessible field when any option is not selected. Defaults to value from PrimeVue locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "No selected item"
    },
    "empty-search-message": {
      "label": "emptySearchMessage",
      "title": "Text to display when filtering does not return any results. Defaults to value from PrimeVue locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "No results found"
    },
    "tabindex": {
      "label": "tabindex",
      "title": "Index of the element in tabbing order.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 0
    },
    "aria-label": {
      "label": "aria-label",
      "title": "Defines a string value that labels an interactive element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "aria-labelledby": {
      "label": "aria-labelledby",
      "title": "Identifier of the underlying input element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "pt": {
      "label": "pt",
      "title": "Used to pass attributes to DOM elements inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "unstyled": {
      "label": "unstyled",
      "title": "When enabled, it removes component related styles in the core.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    }
  },
  "slots": [
    {
      "name": "chip",
      "title": "Custom content for the chip display."
    },
    {
      "name": "header",
      "title": "Custom content for the component header."
    },
    {
      "name": "footer",
      "title": "Custom content for the component footer."
    },
    {
      "name": "item",
      "title": "Custom content for the item."
    },
    {
      "name": "option",
      "title": "Custom content for the item."
    },
    {
      "name": "optiongroup",
      "title": "Custom content for the optiongroup item."
    },
    {
      "name": "content",
      "title": "Custom content for the virtual scroller."
    },
    {
      "name": "loader",
      "title": "Custom content for the virtual scroller loader items."
    },
    {
      "name": "empty",
      "title": "Custom empty template when there is no data to display."
    },
    {
      "name": "dropdownicon",
      "title": "Custom dropdown icon template."
    },
    {
      "name": "removetokenicon",
      "title": "Custom remove token icon template."
    },
    {
      "name": "loadingicon",
      "title": "Custom loading icon template."
    }
  ],
  "events": [
    {
      "name": "change",
      "title": "Callback to invoke on value change.",
      "arguments": [
        {
          "name": "event.originalEvent",
          "type": "object",
          "description": "Browser event"
        },
        {
          "name": "event.value",
          "type": "string",
          "description": "Selected option value"
        }
      ]
    },
    {
      "name": "focus",
      "title": "Callback to invoke when component receives focus.",
      "arguments": [
        {
          "name": "event",
          "type": "object",
          "description": "Browser event"
        }
      ]
    },
    {
      "name": "blur",
      "title": "Callback to invoke when component loses focus.",
      "arguments": [
        {
          "name": "event",
          "type": "object",
          "description": "Browser event"
        }
      ]
    },
    {
      "name": "item-select",
      "title": "Callback to invoke when a suggestion is selected.",
      "arguments": [
        {
          "name": "originalEvent",
          "type": "object",
          "description": "Original event"
        },
        {
          "name": "value",
          "type": "object",
          "description": "Selected item"
        }
      ]
    },
    {
      "name": "item-unselect",
      "title": "Callback to invoke when a selected value is removed.",
      "arguments": [
        {
          "name": "originalEvent",
          "type": "object",
          "description": "Original event"
        },
        {
          "name": "value",
          "type": "object",
          "description": "Unselected item"
        }
      ]
    },
    {
      "name": "dropdown-click",
      "title": "Callback to invoke to when dropdown button is clicked.",
      "arguments": [
        {
          "name": "originalEvent",
          "type": "object",
          "description": "Original event"
        },
        {
          "name": "query",
          "type": "string",
          "description": "Current value of the input field"
        }
      ]
    },
    {
      "name": "clear",
      "title": "Callback to invoke when input is cleared by the user."
    },
    {
      "name": "complete",
      "title": "Callback to invoke to search for suggestions.",
      "arguments": [
        {
          "name": "originalEvent",
          "type": "object",
          "description": "Original event"
        },
        {
          "name": "query",
          "type": "string",
          "description": "Value to search with"
        }
      ]
    },
    {
      "name": "before-show",
      "title": "Callback to invoke before the overlay is shown."
    },
    {
      "name": "before-hide",
      "title": "Callback to invoke before the overlay is hidden."
    },
    {
      "name": "show",
      "title": "Callback to invoke when the overlay is shown."
    },
    {
      "name": "hide",
      "title": "Callback to invoke when the overlay is hidden."
    }
  ]
}
{
  "__id__": "knob",
  "name": "Knob",
  "tag": "p-knob",
  "tagIcon": "knob",
  "layouts": [
    "rawItem"
  ],
  "document": "https://primevue.org/knob",
  "description": "Knob is a form component to define number inputs with a dial.",
  "attributes": {
    "vModel": "modelValue",
    "size": {
      "label": "size",
      "title": "Size of the component in pixels.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 100
    },
    "disabled": {
      "label": "disabled",
      "title": "When present, it specifies that the component should be disabled.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "readonly": {
      "label": "readonly",
      "title": "When present, it specifies that the component value cannot be edited.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "step": {
      "label": "step",
      "title": "Step factor to increment/decrement the value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "min": {
      "label": "min",
      "title": "Mininum boundary value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 0
    },
    "max": {
      "label": "max",
      "title": "Maximum boundary value.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 100
    },
    "value-color": {
      "label": "valueColor",
      "title": "Background of the value.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "range-color": {
      "label": "rangeColor",
      "title": "Background color of the range.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "text-color": {
      "label": "textColor",
      "title": "Color of the value text.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "stroke-width": {
      "label": "strokeWidth",
      "title": "Width of the knob stroke.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ],
      "default": 14
    },
    "show-value": {
      "label": "showValue",
      "title": "Whether the show the value inside the knob.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "value-template": {
      "label": "valueTemplate",
      "title": "Template string of the value.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "{value}"
    },
    "tabindex": {
      "label": "tabindex",
      "title": "Index of the element in tabbing order.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "aria-labelledby": {
      "label": "aria-labelledby",
      "title": "Establishes relationships between the component and label(s) where its value should be one or more element IDs.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "aria-label": {
      "label": "aria-label",
      "title": "Used to define a string that labels the element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "pt": {
      "label": "pt",
      "title": "Used to pass attributes to DOM elements inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "unstyled": {
      "label": "unstyled",
      "title": "When enabled, it removes component related styles in the core.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    }
  },
  "slots": [],
  "events": [
    {
      "name": "change",
      "title": "Callback to invoke when the value changes.",
      "arguments": [
        {
          "name": "value",
          "type": "number",
          "description": "New value"
        }
      ]
    }
  ]
}
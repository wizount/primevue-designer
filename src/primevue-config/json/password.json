{
  "__id__": "password",
  "name": "Password",
  "tag": "p-password",
  "tagIcon": "password",
  "layouts": [
    "rawItem"
  ],
  "document": "https://primevue.org/password",
  "description": "Password displays strength indicator for password fields.",
  "attributes": {
    "vModel": "modelValue",
    "input-id": {
      "label": "inputId",
      "title": "Identifier of the underlying input element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "prompt-label": {
      "label": "promptLabel",
      "title": "Text to prompt password entry. Defaults to PrimeVue Locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "medium-regex": {
      "label": "mediumRegex",
      "title": "Regex for a medium level password.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})"
    },
    "strong-regex": {
      "label": "strongRegex",
      "title": "Regex for a strong level password.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.{8,})"
    },
    "weak-label": {
      "label": "weakLabel",
      "title": "Text for a weak password. Defaults to PrimeVue Locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "medium-label": {
      "label": "mediumLabel",
      "title": "Text for a medium password. Defaults to PrimeVue Locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "strong-label": {
      "label": "strongLabel",
      "title": "Text for a strong password. Defaults to PrimeVue Locale configuration.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "feedback": {
      "label": "feedback",
      "title": "Whether to show the strength indicator or not.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": true
    },
    "toogle-mask": {
      "label": "toogleMask",
      "title": "Whether to show an icon to display the password as plain text.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "append-to": {
      "label": "appendTo",
      "title": "A valid query selector or an HTMLElement to specify where the overlay gets attached. Special keywords are \"body\" for document body and \"self\" for the element itself.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ],
      "default": "body"
    },
    "hide-icon": {
      "label": "hideIcon",
      "title": "Icon to hide displaying the password as plain text.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "show-icon": {
      "label": "showIcon",
      "title": "Icon to show displaying the password as plain text.",
      "types": [
        {
          "name": "string",
          "tag": "icon-chooser"
        }
      ]
    },
    "placeholder": "Please enter ",
    "invalid": {
      "label": "invalid",
      "title": "When present, it specifies that the component should have invalid state style.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "variant": {
      "label": "variant",
      "title": "Specifies the input variant of the component.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "required": {
      "label": "required",
      "title": "When present, it specifies that an input field must be filled out before submitting the form.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "input-style": {
      "label": "inputStyle",
      "title": "Inline style of the input field.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "input-class": {
      "label": "inputClass",
      "title": "Style class of the input field.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "p-input-text"
        }
      ]
    },
    "input-props": {
      "label": "inputProps",
      "title": "Used to pass all properties of the HTMLInputElement to the focusable input element inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "panel-id": {
      "label": "panelId",
      "title": "Identifier of the underlying overlay panel element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "panel-class": {
      "label": "panelClass",
      "title": "Style class of the overlay panel.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "p-input-text"
        }
      ]
    },
    "panel-style": {
      "label": "panelStyle",
      "title": "Inline style of the overlay panel.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "panel-props": {
      "label": "panelProps",
      "title": "Used to pass all properties of the HTMLDivElement to the overlay panel inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "pt": {
      "label": "pt",
      "title": "Used to pass attributes to DOM elements inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "unstyled": {
      "label": "unstyled",
      "title": "When enabled, it removes component related styles in the core.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    }
  },
  "slots": [
    {
      "name": "header",
      "title": "Custom content for the component's header."
    },
    {
      "name": "content",
      "title": "Custom content for the component."
    },
    {
      "name": "footer",
      "title": "Custom content for the component's footer."
    },
    {
      "name": "hideicon",
      "title": "Custom content for the hide icon."
    },
    {
      "name": "showicon",
      "title": "Custom content for the show icon."
    }
  ],
  "events": [
    {
      "name": "change",
      "title": "Callback to invoke on value change.",
      "arguments": [
        {
          "name": "event",
          "type": "object",
          "description": "Browser event"
        }
      ]
    }
  ]
}
{
  "__id__": "checkbox",
  "name": "Checkbox",
  "tag": "p-checkbox",
  "tagIcon": "checkbox",
  "layouts": [
    "rawItem"
  ],
  "document": "https://primevue.org/checkbox",
  "description": "Checkbox is an extension to standard checkbox element with theming.",
  "attributes": {
    "vModel": "modelValue",
    "value": {
      "label": "value",
      "title": "Value of the checkbox.",
      "types": [
        {
          "name": "any",
          "tag": "p-input-text"
        }
      ]
    },
    "binary": {
      "label": "binary",
      "title": "Allows to select a boolean value instead of multiple values.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "disabled": {
      "label": "disabled",
      "title": "When present, it specifies that the element should be disabled.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "invalid": {
      "label": "invalid",
      "title": "When present, it specifies that the component should have invalid state style.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "variant": {
      "label": "variant",
      "title": "Specifies the input variant of the component.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "readonly": {
      "label": "readonly",
      "title": "When present, it specifies that an input field is read-only.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "required": {
      "label": "required",
      "title": "When present, it specifies that the element is required.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    },
    "tabindex": {
      "label": "tabindex",
      "title": "Index of the element in tabbing order.",
      "types": [
        {
          "name": "number",
          "tag": "p-input-number"
        }
      ]
    },
    "true-value": {
      "label": "trueValue",
      "title": "Value in checked state.",
      "types": [
        {
          "name": "any",
          "tag": "p-input-text"
        }
      ]
    },
    "false-value": {
      "label": "falseValue",
      "title": "Value in unchecked state.",
      "types": [
        {
          "name": "any",
          "tag": "p-input-text"
        }
      ]
    },
    "input-id": {
      "label": "inputId",
      "title": "Identifier of the underlying input element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "input-class": {
      "label": "inputClass",
      "title": "Style class of the input field.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        },
        {
          "name": "object",
          "tag": "p-input-text"
        }
      ]
    },
    "input-style": {
      "label": "inputStyle",
      "title": "Inline style of the input field.",
      "types": [
        {
          "name": "object",
          "tag": "style-editor"
        }
      ],
      "default": {}
    },
    "input-props": {
      "label": "inputProps",
      "title": "Used to pass all properties of the HTMLInputElement to the focusable input element inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "aria-labelledby": {
      "label": "aria-labelledby",
      "title": "Establishes relationships between the component and label(s) where its value should be one or more element IDs.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "aria-label": {
      "label": "aria-label",
      "title": "Used to define a string that labels the element.",
      "types": [
        {
          "name": "string",
          "tag": "p-input-text"
        }
      ]
    },
    "pt": {
      "label": "pt",
      "title": "Used to pass attributes to DOM elements inside the component.",
      "types": [
        {
          "name": "object",
          "tag": "object-editor"
        }
      ],
      "default": {}
    },
    "unstyled": {
      "label": "unstyled",
      "title": "When enabled, it removes component related styles in the core.",
      "types": [
        {
          "name": "boolean",
          "tag": "p-input-switch"
        }
      ],
      "default": false
    }
  },
  "slots": [
    {
      "name": "icon",
      "title": "Custom icon template."
    }
  ],
  "events": [
    {
      "name": "click",
      "title": "Callback to invoke on value click."
    },
    {
      "name": "change",
      "title": "Callback to invoke on value change."
    },
    {
      "name": "input",
      "title": "Callback to invoke on value change."
    }
  ]
}